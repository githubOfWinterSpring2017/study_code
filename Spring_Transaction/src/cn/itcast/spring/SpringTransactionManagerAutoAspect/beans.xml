<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">


	<context:property-placeholder
		location="classpath:cn/itcast/spring/SpringTransactionManagerAutoAspect/jdbc.properties" />

	<!-- 配置C3P0的连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.userName}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 持久层类 -->
	<bean id="accountDao" class="cn.itcast.spring.SpringTransactionManagerAutoAspect.AccountDaoImpl">
		<!-- 通过注入数据源，在JdbcDaoSupport中就会自动创建一个Jdbc模版了 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 业务层类 -->
	<bean id="accountService"
		class="cn.itcast.spring.SpringTransactionManagerAutoAspect.AccountServiceImpl">
		<property name="accountDao" ref="accountDao"></property>
	</bean>

	<!-- 编写事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 添加增强 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- 配置那些方法 使用增强，进行事务管理-->
		<tx:attributes>			
			<!-- isolation:DEFAULT :事务的隔离级别. propagation :事务的传播行为. read-only :false.不是只读 
				timeout :-1 no-rollback-for :发生哪些异常不回滚 rollback-for :发生哪些异常回滚事务 -->
			<tx:method name="transfer" />
		</tx:attributes>
	</tx:advice>

	<!-- 定义切点和切面 -->
	<aop:config>
		<!-- 定义切点，表明那些方法使用增强    加号表示的是这个类的子类-->
		<aop:pointcut expression="execution(* cn.itcast.spring.SpringTransactionManagerAutoAspect.AccountService+.*(..))" id="pointCut"/>
		<!-- 定义切面，将通知和切点进行组合 -->
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="pointCut"/>
	</aop:config>

</beans>