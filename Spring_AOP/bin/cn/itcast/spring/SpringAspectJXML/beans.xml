<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 目标类 -->
	<bean id="userDao"
		class="cn.itcast.spring.SpringAspectJXML.UserDao">
	</bean>
	<!-- 切面类 ,需要注意的是这个类仅仅是一个切面类，里面有增强的代码，但这个类并不是切面 -->
	<bean id="userDaoAspect"
		class="cn.itcast.spring.SpringAspectJXML.UserDaoAspect">
	</bean>

	<!-- 配置切面类 -->
	<aop:config>
		<!-- 定义切点 ：也就是目标类中具体需要进行增强的方法名 -->
		<aop:pointcut
			expression="execution(* cn.itcast.spring.SpringAspectJXML.UserDao.find(..))"
			id="findPointCut" />
		<aop:pointcut
			expression="execution(* cn.itcast.spring.SpringAspectJXML.UserDao.update(..))"
			id="updatePointCut" />
		<aop:pointcut
			expression="execution(* cn.itcast.spring.SpringAspectJXML.UserDao.find(..))"
			id="findPointCut" />
		<!-- 定义切面,引入切面类，即这个界面从那个切面类中获取增强代码。指明这个通知类型 ，同时将切点和通知进行组合,下面的配置说明将UserDaoAspect的before方法作为前置增强应用到切点findPointCut上，也就是说在执行find方法之前会执行before方法 -->
		<aop:aspect ref="userDaoAspect">
			<!-- 这里写设置了通知的类型是前置通知 -->
			<aop:before method="before" pointcut-ref="findPointCut" />
			<!-- 后置通知，带返回值类型 -->
			<aop:after-returning method="after"
				pointcut-ref="updatePointCut" returning="returnVal" />
			<aop:around method="around" pointcut-ref="findPointCut" />
		</aop:aspect>

	</aop:config>


</beans>